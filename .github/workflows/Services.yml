name: Build and deploy Prescreminder
on:
  push:
    branches:
    - main
env:
  AZURE_WEBAPP_NAME: Prescreminder
  AZURE_WEBAPP_PACKAGE_PATH: prescreminder.API\published
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 3.1.x
  SERVICES_WORKING_DIRECTORY: services/src/prescreminder.API
  FRONTEND_WORKING_DIRECTORY: user interface/src
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Install Ionic
      run: npm install -g @ionic/cli@6.18.0
    - name: Run npm ci
      run: npm ci
      working-directory: ${{env.FRONTEND_WORKING_DIRECTORY}}
    - name: Build Ionic Application
      run: ionic build
      working-directory: ${{env.FRONTEND_WORKING_DIRECTORY}}
    - name: Copy Front End Code
      run: xcopy "${{ env.FRONTEND_WORKING_DIRECTORY }}\src\dist" "${{ env.SERVICES_WORKING_DIRECTORY }}\dist" 
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore "${{ env.SERVICES_WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.SERVICES_WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test "${{ env.SERVICES_WORKING_DIRECTORY }}" --no-build
    - name: Publish
      run: dotnet publish "${{ env.SERVICES_WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.PRESCREMINDER_FFFF }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Publish Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
